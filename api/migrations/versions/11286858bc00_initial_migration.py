"""Initial migration.

Revision ID: 11286858bc00
Revises: 
Create Date: 2022-09-26 10:00:40.934346

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '11286858bc00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parts',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('number'),
    schema='content'
    )
    op.create_table('products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('customer', sa.String(length=255), nullable=False),
    sa.Column('contract', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('number', 'name', 'customer', 'contract'),
    schema='content'
    )
    op.create_table('sections',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='content'
    )
    op.create_table('units',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('number'),
    schema='content'
    )
    op.create_table('operations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('cycle_time', sa.Integer(), nullable=False),
    sa.Column('advance', sa.Integer(), nullable=False),
    sa.Column('section_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['content.sections.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='content'
    )
    op.create_table('part_sections',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('part_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('section_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('order_num', sa.Integer(), nullable=True),
    sa.Column('is_last_point', sa.Boolean(), nullable=True),
    sa.Column('cycle_time', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['content.parts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['section_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('part_id', 'section_id'),
    schema='content'
    )
    op.create_table('part_units',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('part_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['part_id'], ['content.parts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('part_id', 'unit_id'),
    schema='content'
    )
    op.create_table('parts_transfer_history',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('transfer_date', sa.Date(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('item_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sender_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('recipient_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['content.parts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'transfer_date'),
    sa.UniqueConstraint('id', 'transfer_date'),
    schema='content',
    postgresql_partition_by='RANGE (transfer_date)'
    )
    op.create_table('unit_association',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('child_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'unit_id', 'child_id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('unit_id', 'child_id'),
    schema='content'
    )
    op.create_table('unit_sections',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('section_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('order_num', sa.Integer(), nullable=True),
    sa.Column('is_last_point', sa.Boolean(), nullable=True),
    sa.Column('cycle_time', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('unit_id', 'section_id'),
    schema='content'
    )
    op.create_table('units_transfer_history',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('transfer_date', sa.Date(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('item_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('sender_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('recipient_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['content.sections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'transfer_date'),
    sa.UniqueConstraint('id', 'transfer_date'),
    schema='content',
    postgresql_partition_by='RANGE (transfer_date)'
    )
    op.create_table('operation_products',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('operation_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['operation_id'], ['content.operations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['content.products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('operation_id', 'product_id'),
    schema='content'
    )
    op.create_table('operations_history',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('operation_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('product_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['operation_id'], ['content.operations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['content.products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'completion_date'),
    sa.UniqueConstraint('id', 'completion_date'),
    schema='content',
    postgresql_partition_by='RANGE (completion_date)'
    )
    op.create_table('part_operations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('part_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('operation_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['operation_id'], ['content.operations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['part_id'], ['content.parts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('part_id', 'operation_id'),
    schema='content'
    )
    op.create_table('unit_operations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('unit_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('operation_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['operation_id'], ['content.operations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['content.units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('unit_id', 'operation_id'),
    schema='content'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit_operations', schema='content')
    op.drop_table('part_operations', schema='content')
    op.drop_table('operations_history', schema='content')
    op.drop_table('operation_products', schema='content')
    op.drop_table('units_transfer_history', schema='content')
    op.drop_table('unit_sections', schema='content')
    op.drop_table('unit_association', schema='content')
    op.drop_table('parts_transfer_history', schema='content')
    op.drop_table('part_units', schema='content')
    op.drop_table('part_sections', schema='content')
    op.drop_table('operations', schema='content')
    op.drop_table('units', schema='content')
    op.drop_table('sections', schema='content')
    op.drop_table('products', schema='content')
    op.drop_table('parts', schema='content')
    # ### end Alembic commands ###
